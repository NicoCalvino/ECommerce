module.exports=function(sequelize, dataTypes){
    const Usuario = sequelize.define("Usuario",{
        id:{
            type:dataTypes.INTEGER.UNSIGNED,
            autoIncrement:true,
            primaryKey:true,
            allowNull:false
        },
        nombre:{
            type:dataTypes.STRING(100),
            allowNull:false
        },
        apellido:{
            type:dataTypes.STRING(100),
            allowNull:false
        },
        fechaDeNacimiento:{
            type:dataTypes.DATE,
            allowNull:false
        },
        email:{
            type:dataTypes.STRING(100),
            allowNull:false
        },
        password:{
            type:dataTypes.STRING(100),
            allowNull:false
        },
        imagen:{
            type:dataTypes.STRING(100),
            default:"Anonimo.png"
        },
        rol_id:{
            type:dataTypes.INTEGER.UNSIGNED,
            allowNull:false,
            foreignKey:true,
            default:1
        },
        categoria_de_usuario_id:{
            type:dataTypes.INTEGER.UNSIGNED,
            allowNull:false,
            foreignKey:true,
            default:2
        }
    },{
        createdAt:"created_at",
        updatedAt:"updated_at",
        deletedAt:"deleted_at",
        tableName:"usuarios",
        paranoid: true
    })

    Usuario.associate= function(models){
        Usuario.hasMany(models.Calificacion,{
            as:"calificaciones",
            foreignKey:"usuario_id"
        })
        Usuario.hasMany(models.Carrito,{
            as:"carritos",
            foreignKey:"usuario_id",
        })
        Usuario.belongsTo(models.Rol,{
            as:"roles",
            foreignKey:"rol_id"
        })
        Usuario.belongsTo(models.CategoriaDeUsuario,{
            as:"categoriasUsuarios",
            foreignKey:"categoria_de_usuario_id"
        })
        Usuario.belongsToMany(models.Producto,{
            as:"carrito",
            through:"carrito_de_compras",
            foreignKey:"usuario_id",
            otherKey:"producto_id",
            timestamps:false
        })
        Usuario.belongsToMany(models.Producto,{
            as:"favoritos",
            through:"favoritos_de_usuarios",
            foreignKey:"usuario_id",
            otherKey:"producto_id",
            timestamps:false
        })
        Usuario.belongsToMany(models.Interes,{
            as:"intereses",
            through:"usuario_interes",
            foreignKey:"usuario_id",
            otherKey:"interes_id",
            timestamps:false
        })
    }

    return Usuario
}